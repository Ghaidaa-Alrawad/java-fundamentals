/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package linter;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

import java.nio.file.Path;
import java.util.ArrayList;
import java.util.List;

import static org.junit.jupiter.api.Assertions.*;
class AppTest {
//    @Test void appHasAGreeting() {
//        App classUnderTest = new App();
//        assertNotNull(classUnderTest.getGreeting(), "app should have a greeting");
//    }
@Test
void testNoErrorFile() {
    App app = new App();
    Path filePath = Path.of("./app/src/test/resources/noError.js");
    List<String> errors = app.findMissingSemicolons(filePath);
    assertTrue(errors.isEmpty(), "No errors expected in noError.js");
}

    @Test
    void testOneErrorFile() {
        App app = new App();
        Path filePath = Path.of("./app/src/test/resources/oneError.js");
        List<String> errors = app.findMissingSemicolons(filePath);
        assertFalse(errors.isEmpty(), "One error expected in oneError.js");
    }

    @Test
    void testEmptyFile() {
        App app = new App();
        Path filePath = Path.of("./app/src/test/resources/empty.js");
        List<String> errors = app.findMissingSemicolons(filePath);
        assertTrue(errors.isEmpty(), "No errors expected in empty.js");
    }

    @Test
    void testFewErrorsFile() {
        App app = new App();
        Path filePath = Path.of("./app/src/test/resources/fewError.js");
        List<String> errors = app.findMissingSemicolons(filePath);
        assertFalse(errors.isEmpty(), "Errors expected in fewError.js");
    }


}
