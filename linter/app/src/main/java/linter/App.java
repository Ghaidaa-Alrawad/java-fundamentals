/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package linter;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.ArrayList;
import java.util.List;

public class App {

    public static void main(String[] args) {
        //linter/app/src/test/resources
        Path gatesFilePath = Path.of("./app/src/main/resources/gates.js");
        List<String> errors = findMissingSemicolons(gatesFilePath);

        printErrors(errors);
    }

    public static List<String> findMissingSemicolons(Path filePath) {
        List<String> errorMessages = new ArrayList<>();
        int lineCounter = 0;

        try {
            List<String> lines = Files.readAllLines(filePath);

            for (String line : lines) {
                lineCounter++;
                if (shouldSkipLine(line)) {
                    continue;
                }

                if (!line.trim().endsWith(";")) {
                    errorMessages.add("Line " + lineCounter + ": Missing semicolon.");
                }
            }

        } catch (IOException e) {
            e.printStackTrace();
        }

        return errorMessages;
    }

    private static boolean shouldSkipLine(String line) {
        return line.trim().isEmpty() || line.trim().endsWith("{") ||
                line.trim().endsWith("}") || line.contains("if") || line.contains("else");
    }

    private static void printErrors(List<String> errors) {
        if (!errors.isEmpty()) {
            System.out.println("Errors found:");
            for (String error : errors) {
                System.out.println(error);
            }
        } else {
            System.out.println("No errors found.");
        }
    }
}
